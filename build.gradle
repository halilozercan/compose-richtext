// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext.versions = [
      targetSdk: 29,
      compose: '1.0.0-alpha05',
      kotlin: '1.4.10',
      commonmark: '0.15.2'
  ]

  rootProject.ext.defaultAndroidConfig = {
    compileSdkVersion versions.targetSdk

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
      minSdkVersion 21
      targetSdkVersion versions.targetSdk
      versionCode 1
      versionName "1.0"
    }

    buildFeatures {
      compose = true
    }

    composeOptions {
      kotlinCompilerVersion '1.4.0'
      kotlinCompilerExtensionVersion versions.compose
    }
  }

  ext.deps = [
      android_gradle_plugin: "com.android.tools.build:gradle:4.2.0-alpha15",

      androidx: [
          activity: "androidx.activity:activity:1.1.0",
          annotations: "androidx.annotation:annotation:1.1.0",
          appcompat: "androidx.appcompat:appcompat:1.1.0",
          constraint_layout: "androidx.constraintlayout:constraintlayout:1.1.3",
          fragment: "androidx.fragment:fragment:1.2.2",
          // Note that we're not using the actual androidx material dep yet, it's still alpha.
          material: "com.google.android.material:material:1.1.0",
          recyclerview: "androidx.recyclerview:recyclerview:1.1.0",
          // Note that we are *not* using lifecycle-viewmodel-savedstate, which at this
          // writing is still in beta and still fixing bad bugs. Probably we'll never bother to,
          // it doesn't really add value for us.
          savedstate: "androidx.savedstate:savedstate:1.0.0",
          transition: "androidx.transition:transition:1.3.1",
          viewbinding: "androidx.databinding:viewbinding:3.6.1",
      ],
      compose: [
          foundation: "androidx.compose.foundation:foundation:${versions.compose}",
          layout: "androidx.compose.foundation:foundation-layout:${versions.compose}",
          material: "androidx.compose.material:material:${versions.compose}",
          icons: "androidx.compose.material:material-icons-extended:${versions.compose}",
          test: "androidx.ui:ui-test:${versions.compose}",
          text: "androidx.compose.foundation:foundation-text:${versions.compose}",
          tooling: "androidx.ui:ui-tooling:${versions.compose}",
      ],
      kotlin: [
          binaryCompatibilityValidatorPlugin: "org.jetbrains.kotlinx:binary-compatibility-validator:0.2.1",
          gradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
          stdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
          reflect: "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
          test: [
              common: "org.jetbrains.kotlin:kotlin-test-common",
              annotations: "org.jetbrains.kotlin:kotlin-test-annotations-common",
              jdk: "org.jetbrains.kotlin:kotlin-test-junit",
              mockito: "com.nhaarman:mockito-kotlin-kt1.1:1.6.0"
          ]
      ],
      commonmark: [
          core: "com.atlassian.commonmark:commonmark:${versions.commonmark}",
          tables: "com.atlassian.commonmark:commonmark-ext-gfm-tables:${versions.commonmark}",
          strikethrough: "com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:${versions.commonmark}"
      ],
      accompanist: "dev.chrisbanes.accompanist:accompanist-coil:0.3.0",
      mavenPublish: "com.vanniktech:gradle-maven-publish-plugin:0.9.0",
      ktlint: "org.jlleitschuh.gradle:ktlint-gradle:9.2.0",
  ]

  repositories {
    mavenCentral()
    gradlePluginPortal()
    google()
  }

  dependencies {
    classpath deps.android_gradle_plugin
    classpath deps.kotlin.gradlePlugin
    classpath deps.ktlint
  }
}

subprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      jvmTarget = "1.8"
      freeCompilerArgs = [
          "-Xopt-in=kotlin.RequiresOptIn",
          "-Xallow-jvm-ir-dependencies",
          "-Xskip-prerelease-check",
      ]
    }
  }
}
